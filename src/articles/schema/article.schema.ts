import { attribute, rangeKey, table, autoGeneratedHashKey, hashKey  } from '@aws/dynamodb-data-mapper-annotations';
import { DynamoDB } from 'aws-sdk';
import { DataMapper } from '@aws/dynamodb-data-mapper';
import { IArticle } from '../interfaces/article.interface';

@table('articles')
export class ArticleSchema implements IArticle {
    @autoGeneratedHashKey()
    _id: string;

    @attribute()
    title: string;

    @attribute()
    content: string;

    @attribute({defaultProvider: () => new Date()})
    createdAt: Date;

    @attribute({defaultProvider: () => new Date()})
    updatedAt: Date;

    @attribute()
    creatorId: string;
}

async function createTable() {
    const mapper = new DataMapper({ client: new DynamoDB() });
    await mapper.ensureTableExists(ArticleSchema, { readCapacityUnits: 5, writeCapacityUnits: 5 });
}
createTable();